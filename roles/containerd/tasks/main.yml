---
- name: "Install dependency"
  package:
    name:
      - util-linux
      - libseccomp
      - libseccomp-devel
    state: present
    update_cache: yes
  when:
    - ansible_os_family in ['RedHat', 'AlmaLinux', 'Rocky']
  tags: containerd_app

- name: "Install dependency"
  package:
    name:
      - util-linux
      - libseccomp2
    state: present
    update_cache: yes
  when:
    - ansible_os_family in ["Debian"]
  tags: containerd_app

- name: Download containerd
  get_url:
    url: "http://{{ hostvars['static'].ansible_host }}:{{static.port}}/containerd/{{ containerd_ver }}/cri-containerd-cni-{{ containerd_ver[1:] }}-linux-amd64.tar.gz"
    dest: "/tmp"
  tags: install_containerd

- name: Install containerd
  shell: |
    tar -xv -C / -f /tmp/cri-containerd-cni-{{ containerd_ver[1:] }}-linux-amd64.tar.gz
  tags: install_containerd

# - name: "Install containerd"
#   unarchive:
#     src: "/tmp/containerd-{{ containerd_ver[1:] }}-linux-amd64.tar.gz"
#     dest: "{{ bindest }}"
#     owner: root
#     group: root
#     mode: 0755
#     remote_src: yes
#     extra_opts:
#       - --strip-components=1
#   tags: install_containerd

- name: "Create docker group"
  group:
    name: docker
    gid: 5000
    system: yes

# - name: "Set containerd service"
#   template:
#     src: "containerd.service.j2"
#     dest: "/usr/lib/systemd/system/containerd.service"
#     owner: root
#     group: root
#     mode: 0644
#   tags: containerd_config

# - name: "Create containerd data directory"
#   file:
#     path: "{{ containerd.root }}"
#     owner: root
#     group: root
#     mode: 0755
#     state: directory
#   tags: containerd_config

- name: "Create containerd config directory"
  file:
    path: "/etc/containerd"
    owner: root
    group: root
    mode: 0755
    state: directory
  tags: containerd_config

- name: Config containerd
  shell:
    cmd: |
      containerd config default | tee /etc/containerd/config.toml
      sed -i "s@SystemdCgroup = false@SystemdCgroup = true@g" /etc/containerd/config.toml
      sed -i "s|^    sandbox_image.*|    sandbox_image = \"{{infra_image}}\"|g" /etc/containerd/config.toml
      keyline=$(cat /etc/containerd/config.toml | grep -n "grpc" | head -1 | cut -d ":" -f 1)
      sed -i "${keyline},28s|gid = 0|gid = 5000|" /etc/containerd/config.toml
      if [ -f /etc/cni/net.d/10-containerd-net.conflist ]; then
        rm -rf /etc/cni/net.d/10-containerd-net.conflist;
      fi

- name: Create containerd.service unit files
  template: 
    src: containerd.service.j2
    dest: /lib/systemd/system/containerd.service

- name: Enable containerd
  systemd:
    name: containerd
    state: started
    enabled: yes
    daemon_reload: yes